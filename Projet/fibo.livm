(LABEL FIBO)(MOVE FP R0)  ;;compile-args (= n 0)
(SUB 1 R0)
(LOAD R0 R0)
(PUSH R0)     ;;pile n  
(MOVE 0 R0)
(PUSH R0)     ;;pile 0
(= 2)         ;;call(= n 0)
(PUSH R0)  
(MOVE FP R0)  ;;compile-args (= n 1)
(SUB 1 R0)
(LOAD R0 R0)
(PUSH R0)     ;;pile n
(MOVE 1 R0)
(PUSH R0)     ;;pile 1
(= 2)         ;;call(= n 1)
(PUSH R0)
(OR 2)        ;;call(OR (= n 0) (= n 1))
(CMP R0 NIL)  ;;if
(JEQ 1)
(MOVE 1 R0)   ;;prep 1
(JMP 2)	      ;;jump fin
(LABEL 1)     ;;else
(MOVE FP R0)  ;;compile-args(- n 1)
(SUB 1 R0)
(LOAD R0 R0)
(PUSH R0)    
(MOVE 1 R0)
(PUSH R0)
(- 2)        ;;call(- n 1)
(PUSH R0)
(MOVE 1 R0)  
(PUSH R0)    ;;pile nbArg de fibo //içi 1
(MOVE FP R1) ;;prep fibo
(MOVE SP FP)
(MOVE SP R2)
(SUB 2 R2)
(PUSH R2)
(PUSH R1)
(JSR FIBO)   ;;call fibo(- n 1)
(POP R1)     ;;recup
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)    ;;res fibo(- n 1)
(MOVE FP R0) ;;compile-args(- n 2)
(SUB 1 R0)
(LOAD R0 R0)
(PUSH R0)
(MOVE 2 R0)
(PUSH R0)
(- 2)        ;;call(- n 2)
(PUSH R0)
(MOVE 1 R0)  ;;pile nb de fibo
(PUSH R0)
(MOVE FP R1)
(MOVE SP FP)
(MOVE SP R2)
(SUB 2 R2)
(PUSH R2)
(PUSH R1)
(JSR FIBO)   ;;call fibo(- n 2)
(POP R1)
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PUSH R0)
(+ 2)        ;;call(+ (fibo (- n 1)) (fibo (- n 2)))
(LABEL 2)    ;;label fin
(RTN)        ;;return
(LABEL MAIN)
(MOVE 4 R0)
(PUSH R0)    ;;pile 4
(MOVE 1 R0)
(PUSH R0)    ;;pile nbArg fct appelée  // içi 1 et fibo 
(MOVE FP R1) ;;prep fibo
(MOVE SP FP)
(MOVE SP R2)
(SUB 2 R2)
(PUSH R2)
(PUSH R1)
(JSR FIBO)  ;;call fibo(4)
(POP R1)    ;;recup
(POP R2)
(MOVE R1 FP)
(MOVE R2 SP)
(PRINT)     ;;print l'instruction
(HALT)     ;;arret machine